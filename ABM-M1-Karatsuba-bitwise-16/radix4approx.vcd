$date
	Tue Jun 29 14:05:17 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ms
$end
$scope module radix4approx_tb $end
$var wire 16 ! p [15:0] $end
$var reg 8 " x [7:0] $end
$var reg 8 # y [7:0] $end
$var integer 32 $ i [31:0] $end
$var integer 32 % out [31:0] $end
$var integer 32 & seed [31:0] $end
$scope module uut $end
$var wire 16 ' p [15:0] $end
$var wire 8 ( x [7:0] $end
$var wire 8 ) y [7:0] $end
$var wire 10 * x_new [9:0] $end
$var reg 16 + ANS [15:0] $end
$var reg 1 , mux $end
$var integer 32 - i [31:0] $end
$var integer 32 . j [31:0] $end
$var integer 32 / m [31:0] $end
$var integer 32 0 t [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1001 0
b110 /
b100 .
b101 -
0,
b10010000011 +
b1101001 *
b1011 )
b1101001 (
b10010000011 '
b11000110011011000100100011101101 &
b10 %
b0 $
b1011 #
b1101001 "
b10010000011 !
$end
#50
b101101000110000 !
b101101000110000 '
b101101000110000 +
b100 .
0,
b1001 0
b101 -
b1110100 #
b1110100 )
b11010000 *
b11010000 "
b11010000 (
b10101110011011011111100111000011 &
b1 $
#100
b10110011010 !
b10110011010 '
b10110011010 +
0,
b100 .
b1001 0
b101 -
b101001 #
b101001 )
b100110 *
b100110 "
b100110 (
b11001111110001011111000000001001 &
b10 $
#150
b111011000001 !
b111011000001 '
b111011000001 +
b100 .
0,
b1001 0
b101 -
b11101 #
b11101 )
b10000101 *
b10000101 "
b10000101 (
b10011100001010010100111111 &
b11 $
#200
b10000011101111 !
b10000011101111 '
b10000011101111 +
b100 .
0,
b1001 0
b101 -
b1110011 #
b1110011 )
b1010101 *
b1010101 "
b1010101 (
b1110111101000111011100101 &
b100 $
#250
b111000111110011 !
b111000111110011 '
b111000111110011 +
b100 .
0,
b1001 0
b101 -
b11100010 #
b11100010 )
b10000001 *
b10000001 "
b10000001 (
b1101001110110111111001111011 &
b101 $
#300
b11001101000011 !
b11001101000011 '
b11001101000011 +
b100 .
0,
b1001 0
b101 -
b10001011 #
b10001011 )
b1101001 *
b1101001 "
b1101001 (
b1111001000111010000000110000001 &
b110 $
#350
b1001100001110000 !
b1001100001110000 '
b1001100001110000 +
b100 .
0,
b1001 0
b101 -
b10100000 #
b10100000 )
b11110101 *
b11110101 "
b11110101 (
b1100100101011111100000101110111 &
b111 $
#400
b1100100101111 !
b1100100101111 '
b1100100101111 +
b100 .
0,
b1001 0
b101 -
b11010 #
b11010 )
b11101101 *
b11101101 "
b11101101 (
b10101000001110111110001111011101 &
b1000 $
#450
b111011001 !
b111011001 '
b111011001 +
b100 .
b1001 0
b101 -
b101010 #
b101010 )
b1011 *
b1011 "
b1011 (
b1100100110000110101000110011 &
b1001 $
#500
b1111111110111100 !
b1111111110111100 '
b1111111110111100 +
b100 .
b1001 0
b101 -
b10001000 #
b10001000 )
b0 *
b0 "
b0 (
b1011010111001011001000111111001 &
b1010 $
#550
b10111101110101 !
b10111101110101 '
b10111101110101 +
b100 .
0,
b1001 0
b101 -
b111011 #
b111011 )
b11001110 *
b11001110 "
b11001110 (
b11001001101001100011010010101111 &
b1011 $
#600
b1001110101110000 !
b1001110101110000 '
b1001110101110000 +
b100 .
0,
b1001 0
b101 -
b10110000 #
b10110000 )
b11100101 *
b11100101 "
b11100101 (
b101000000100000010011111010101 &
b1100 $
#650
b11111000110101 !
b11111000110101 '
b11111000110101 +
b100 .
0,
b1001 0
b101 -
b1011010 #
b1011010 )
b10101110 *
b10101110 "
b10101110 (
b11011010001010111001110011101011 &
b1101 $
#700
b1000000111 !
b1000000111 '
b1000000111 +
b100 .
b1001 0
b101 -
b10101101 #
b10101101 )
b11 *
b11 "
b11 (
b10110000000110011000000101110001 &
b1110 $
#750
b100010111111100 !
b100010111111100 '
b100010111111100 +
b100 .
0,
b1001 0
b101 -
b11101100 #
b11101100 )
b1001100 *
b1001100 "
b1001100 (
b11010000100110001101111011100111 &
b1111 $
#800
b10010000000000 !
b10010000000000 '
b10010000000000 +
b100 .
0,
b1001 0
b101 -
b101001 #
b101001 )
b11100100 *
b11100100 "
b11100100 (
b11000010101000110011101011001101 &
b10000 $
#850
b1110100101011 !
b1110100101011 '
b1110100101011 +
b100 .
0,
b1001 0
b101 -
b11010010 #
b11010010 )
b100100 *
b100100 "
b100100 (
b1011101101111111011010100011 &
b10001 $
#900
b11101101101011 !
b11101101101011 '
b11101101101011 +
b100 .
0,
b1001 0
b101 -
b10110111 #
b10110111 )
b1010100 *
b1010100 "
b1010100 (
b1001000001011101010111111101001 &
b10010 $
#950
b11001100000100 !
b11001100000100 '
b11001100000100 +
b100 .
0,
b1001 0
b101 -
b1100100 #
b1100100 )
b10000101 *
b10000101 "
b10000101 (
b1000101010001010000000011111 &
b10011 $
#1000
b110001100001 !
b110001100001 '
b110001100001 +
b100 .
0,
b1001 0
b101 -
b11010 #
b11010 )
b1110010 *
b1110010 "
b1110010 (
b10001011011110001111110011000101 &
b10100 $
#1050
b11111100001011 !
b11111100001011 '
b11111100001011 +
b100 .
0,
b1001 0
b101 -
b10010101 #
b10010101 )
b1011111 *
b1011111 "
b1011111 (
b10001010100111000101011101011011 &
b10101 $
#1100
b1111111110101 !
b1111111110101 '
b1111111110101 +
b100 .
0,
b1001 0
b101 -
b1010001 #
b1010001 )
b1100101 *
b1100101 "
b1100101 (
b111110100101101111110101100001 &
b10110 $
#1150
b11011100010111 !
b11011100010111 '
b11011100010111 +
b100 .
0,
b1001 0
b101 -
b10101001 #
b10101001 )
b1010011 *
b1010011 "
b1010011 (
b1010100010100100101100001010111 &
b10111 $
#1200
b1111101011 !
b1111101011 '
b1111101011 +
b100 .
b1001 0
b101 -
b100111 #
b100111 )
b10100 *
b10100 "
b10100 (
b1010111110100010100110110111101 &
b11000 $
#1250
b1011000001110111 !
b1011000001110111 '
b1011000001110111 +
b100 .
0,
b1001 0
b101 -
b11000011 #
b11000011 )
b11101000 *
b11101000 "
b11101000 (
b11101111010100111001111100010011 &
b11001 $
#1300
b11111111 !
b11111111 '
b11111111 +
b100 .
b1001 0
b101 -
b1110010 #
b1110010 )
b101 *
b101 "
b101 (
b10100010010000000100100111011001 &
b11010 $
#1350
b101000110001 !
b101000110001 '
b101000110001 +
b100 .
0,
b1001 0
b101 -
b1111 #
b1111 )
b10101110 *
b10101110 "
b10101110 (
b10111100111011101110011110001111 &
b11011 $
#1400
b10111000011 !
b10111000011 '
b10111000011 +
b100 .
0,
b1001 0
b101 -
b10010 #
b10010 )
b1010001 *
b1010001 "
b1010001 (
b10011110001010000000110110110101 &
b11100 $
#1450
b111110011101000 !
b111110011101000 '
b111110011101000 +
b100 .
0,
b1001 0
b101 -
b10001001 #
b10001001 )
b11011100 *
b11011100 "
b11011100 (
b1001100111101001010110111001011 &
b11101 $
#1500
b10100011001011 !
b10100011001011 '
b10100011001011 +
b100 .
b1001 0
b101 -
b10110001 #
b10110001 )
b111011 *
b111011 "
b111011 (
b1101000101000111010101010001 &
b11110 $
#1550
b100110111110100 !
b100110111110100 '
b100110111110100 +
b100 .
0,
b1001 0
b101 -
b10000101 #
b10000101 )
b10100100 *
b10100100 "
b10100100 (
b10110110001100110010110111000111 &
b11111 $
#1600
b1001000100000100 !
b1001000100000100 '
b1001000100000100 +
b100 .
0,
b1001 0
b101 -
b10100100 #
b10100100 )
b11100101 *
b11100101 "
b11100101 (
b1000101101101010001110010101101 &
b100000 $
#1650
b1101100101001 !
b1101100101001 '
b1101100101001 +
b100 .
0,
b1001 0
b101 -
b1011101 #
b1011101 )
b1001101 *
b1001101 "
b1001101 (
b1101100101100100110001110000011 &
b100001 $
#1700
b1010101001001 !
b1010101001001 '
b1010101001001 +
0,
b100 .
b1001 0
b101 -
b1011011 #
b1011011 )
b111011 *
b111011 "
b111011 (
b101011011110010101111111001001 &
b100010 $
#1750
b10100100111101 !
b10100100111101 '
b10100100111101 +
b100 .
0,
b1001 0
b101 -
b110011 #
b110011 )
b11001111 *
b11001111 "
b11001111 (
b11010001101100000000101011111111 &
b100011 $
#1800
b111100011011001 !
b111100011011001 '
b111100011011001 +
b100 .
0,
b1001 0
b101 -
b1111010 #
b1111010 )
b11111011 *
b11111011 "
b11111011 (
b1100101111011000101101010100101 &
b100100 $
#1850
b11000101111001 !
b11000101111001 '
b11000101111001 +
b100 .
0,
b1001 0
b101 -
b1101010 #
b1101010 )
b1101011 *
b1101011 "
b1101011 (
b1111001010110111010000000111011 &
b100101 $
#1900
b10010101111101 !
b10010101111101 '
b10010101111101 +
b100 .
0,
b1001 0
b101 -
b1010110 #
b1010110 )
b1101111 *
b1101111 "
b1101111 (
b110011110100001110100101000001 &
b100110 $
#1950
b10111011110111 !
b10111011110111 '
b10111011110111 +
b100 .
0,
b1001 0
b101 -
b1011011 #
b1011011 )
b10000101 *
b10000101 "
b10000101 (
b11100010010100100101111100110111 &
b100111 $
#2000
b11011011100011 !
b11011011100011 '
b11011011100011 +
b100 .
0,
b1001 0
b101 -
b10001001 #
b10001001 )
b1101111 *
b1101111 "
b1101111 (
b11110101111111011010011110011101 &
b101000 $
#2050
b1001101 !
b1001101 '
b1001101 +
b100 .
b1001 0
b101 -
b1101111 #
b1101111 )
b10 *
b10 "
b10 (
b11010110110110100001111110011 &
b101001 $
#2100
b110001010001100 !
b110001010001100 '
b110001010001100 +
b100 .
0,
b1001 0
b101 -
b11010100 #
b11010100 )
b1110111 *
b1110111 "
b1110111 (
b1001101111110001111000110111001 &
b101010 $
#2150
b11100000001101 !
b11100000001101 '
b11100000001101 +
b100 .
0,
b1001 0
b101 -
b10011111 #
b10011111 )
b1100011 *
b1100011 "
b1100011 (
b10001111111000110000101001101111 &
b101011 $
#2200
b1100100011001 !
b1100100011001 '
b1100100011001 +
b100 .
0,
b1001 0
b101 -
b1111110 #
b1111110 )
b100110 *
b100110 "
b100110 (
b1101100010101001110001110010101 &
b101100 $
#2250
b1011100101001100 !
b1011100101001100 '
b1011100101001100 +
b100 .
0,
b1001 0
b101 -
b11101100 #
b11101100 )
b11001001 *
b11001001 "
b11001001 (
b1101110000010111010101011 &
b101101 $
#2300
b100110010101011 !
b100110010101011 '
b100110010101011 +
b100 .
0,
b1001 0
b101 -
b11100111 #
b11100111 )
b1010100 *
b1010100 "
b1010100 (
b11101010110010110101100100110001 &
b101110 $
#2350
b100111000001011 !
b100111000001011 '
b100111000001011 +
b100 .
0,
b1001 0
b101 -
b10000101 #
b10000101 )
b10001111 *
b10001111 "
b10001111 (
b1011010100001101110110010100111 &
b101111 $
#2400
b111110011011100 !
b111110011011100 '
b111110011011100 +
b100 .
0,
b1001 0
b101 -
b11110100 #
b11110100 )
b10000011 *
b10000011 "
b10000011 (
b1001110000110011110111010001101 &
b110000 $
#2450
b111111100111110 !
b111111100111110 '
b111111100111110 +
b100 .
0,
b1001 0
b101 -
b10000001 #
b10000001 )
b11111110 *
b11111110 "
b11111110 (
b11100010100101010100000001100011 &
b110001 $
#2500
b110010 $
