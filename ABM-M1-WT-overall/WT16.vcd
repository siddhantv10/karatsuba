$date
	Fri Jun 18 15:16:29 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ms
$end
$scope module WT16_tb $end
$var wire 32 ! P [31:0] $end
$var reg 16 " A [15:0] $end
$var reg 16 # B [15:0] $end
$scope module uut $end
$var wire 16 $ A [15:0] $end
$var wire 16 % B [15:0] $end
$var wire 32 & P [31:0] $end
$var wire 16 ' M4 [15:0] $end
$var wire 16 ( M3 [15:0] $end
$var wire 16 ) M2 [15:0] $end
$var wire 16 * M1 [15:0] $end
$var wire 8 + BL [7:0] $end
$var wire 8 , BH [7:0] $end
$var wire 8 - AL [7:0] $end
$var wire 8 . AH [7:0] $end
$var reg 17 / A1 [16:0] $end
$var reg 17 0 A2 [16:0] $end
$var reg 17 1 A3 [16:0] $end
$var reg 32 2 ANS [31:0] $end
$var integer 32 3 i [31:0] $end
$scope module ACC1 $end
$var wire 16 4 p [15:0] $end
$var wire 8 5 x [7:0] $end
$var wire 8 6 y [7:0] $end
$var wire 9 7 xbar [8:0] $end
$var reg 16 8 ANS [15:0] $end
$var integer 32 9 i [31:0] $end
$var integer 32 : j [31:0] $end
$upscope $end
$scope module APP1 $end
$var wire 16 ; p [15:0] $end
$var wire 8 < x [7:0] $end
$var wire 8 = y [7:0] $end
$var wire 9 > xbar [8:0] $end
$var reg 16 ? ANS [15:0] $end
$var integer 32 @ i [31:0] $end
$var integer 32 A j [31:0] $end
$upscope $end
$scope module APP2 $end
$var wire 16 B p [15:0] $end
$var wire 8 C x [7:0] $end
$var wire 8 D y [7:0] $end
$var wire 9 E xbar [8:0] $end
$var reg 16 F ANS [15:0] $end
$var integer 32 G i [31:0] $end
$var integer 32 H j [31:0] $end
$upscope $end
$scope module APP3 $end
$var wire 16 I p [15:0] $end
$var wire 8 J x [7:0] $end
$var wire 8 K y [7:0] $end
$var wire 9 L xbar [8:0] $end
$var reg 16 M ANS [15:0] $end
$var integer 32 N i [31:0] $end
$var integer 32 O j [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11 O
b100 N
b110000001010 M
b110000111 L
b11101 K
b1111001 J
b110000001010 I
b11 H
b100 G
b1111011000001010 F
b110110001 E
b11100110 D
b1001111 C
b1111011000001010 B
b11 A
b100 @
b1111001000001110 ?
b110000111 >
b11100110 =
b1111001 <
b1111001000001110 ;
b11 :
b100 9
b100011110011 8
b110110001 7
b11101 6
b1001111 5
b100011110011 4
b11 3
b111111101100000011000001110 2
b100011110011 1
b1111001000001110 0
b10000001000010100 /
b1001111 .
b1111001 -
b11101 ,
b11100110 +
b1111001000001110 *
b100011110011 )
b1111011000001010 (
b110000001010 '
b111111101100000011000001110 &
b1110111100110 %
b100111101111001 $
b1110111100110 #
b100111101111001 "
b111111101100000011000001110 !
$end
#200
b11 3
b11110010001010100011010000001110 !
b11110010001010100011010000001110 &
b11110010001010100011010000001110 2
b1111000101001110 1
b1111000001110 0
b1101110000010110 /
b1110010 7
b1111000101001110 )
b1111000101001110 4
b1111000101001110 8
b11 :
b100 9
b1110010 E
b1100011000001100 (
b1100011000001100 B
b1100011000001100 F
b11 H
b100 G
b111000011 >
b1111000001110 *
b1111000001110 ;
b1111000001110 ?
b11 A
b100 @
b111000011 L
b1011000001010 '
b1011000001010 I
b1011000001010 M
b11 O
b100 N
b100001 ,
b100001 6
b100001 K
b1111110 +
b1111110 =
b1111110 D
b10001110 .
b10001110 5
b10001110 C
b111101 -
b111101 <
b111101 J
b10000101111110 #
b10000101111110 %
b1000111000111101 "
b1000111000111101 $
#400
b11 3
b1010100101110001001000001010 !
b1010100101110001001000001010 &
b1010100101110001001000001010 2
b100111000000 1
b1111111000001010 0
b1101011000010100 /
b11010 7
b100111000000 )
b100111000000 4
b100111000000 8
b11 :
b100 9
b11010 E
b1100 (
b1100 B
b1100 F
b11 H
b100 G
b110111101 >
b1111111000001010 *
b1111111000001010 ;
b1111111000001010 ?
b11 A
b100 @
b110111101 L
b1101011000001000 '
b1101011000001000 I
b1101011000001000 M
b11 O
b100 N
b10100000 ,
b10100000 6
b10100000 K
b11111111 +
b11111111 =
b11111111 D
b11100110 .
b11100110 5
b11100110 C
b1000011 -
b1000011 <
b1000011 J
b1010000011111111 #
b1010000011111111 %
b1110011001000011 "
b1110011001000011 $
#600
b11 3
b1101010010110100100000001100 !
b1101010010110100100000001100 &
b1101010010110100100000001100 2
b110110011101 1
b11001000001100 0
b11010111000010110 /
b111010111 7
b110110011101 )
b110110011101 4
b110110011101 8
b11 :
b100 9
b111010111 E
b1110011000001010 (
b1110011000001010 B
b1110011000001010 F
b11 H
b100 G
b1010010 >
b11001000001100 *
b11001000001100 ;
b11001000001100 ?
b11 A
b100 @
b1010010 L
b1100100000001100 '
b1100100000001100 I
b1100100000001100 M
b11 O
b100 N
b1010101 ,
b1010101 6
b1010101 K
b10100001 +
b10100001 =
b10100001 D
b101001 .
b101001 5
b101001 C
b10101110 -
b10101110 <
b10101110 J
b101010110100001 #
b101010110100001 %
b10100110101110 "
b10100110101110 $
#800
b11 3
b11101010010001100010000000001000 !
b11101010010001100010000000001000 &
b11101010010001100010000000001000 2
b1110101101000010 1
b101000001000 0
b10000010000010110 /
b111010011 7
b1110101101000010 )
b1110101101000010 4
b1110101101000010 8
b11 :
b100 9
b111010011 E
b1000000001110 (
b1000000001110 B
b1000000001110 F
b11 H
b100 G
b111100100 >
b101000001000 *
b101000001000 ;
b101000001000 ?
b11 A
b100 @
b111100100 L
b1111010000001000 '
b1111010000001000 I
b1111010000001000 M
b11 O
b100 N
b10001010 ,
b10001010 6
b10001010 K
b1100111 +
b1100111 =
b1100111 D
b101101 .
b101101 5
b101101 C
b11100 -
b11100 <
b11100 J
b1000101001100111 #
b1000101001100111 %
b10110100011100 "
b10110100011100 $
#1000
